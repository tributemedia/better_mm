<?php
// $Id$

/**
 * @file
 * Provides configuration page to choose a menu to pull items from and create a custom menu using those items.
 */

// =================================
// = Implements hook_permission(). =
// =================================

function better_mm_permission() {
  $permission = array(
    'administer better mm' => array(
      'title' => t('Administer Better Mega Menu'),
      'description' => t('Configure Better Mega Menu Settings.'),
    ),
  );
  return $permission;
}

// ===========================
// = Implements hook_menu(). =
// ===========================

function better_mm_menu() {
  $items['admin/structure/better_mm'] = array(
    'title' => t('Better Mega Menu Settings'),
    'description' => t('Configure Better Mega Menu Settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('better_mm_admin_settings'),
    'access arguments' => array('administer better mm'),
  );
  return $items;
}

// ================================
// = Construct admin settins form =
// ================================

function better_mm_admin_settings($form, &$form_state) {
  $wide_access = FALSE;
  $mega_access = FALSE;
  
  $form['bmm_menu'] = array(
    '#title' => t('Select Menu'),
    '#type' => 'select',
    '#options' => better_mm_get_options('menus'),
    '#default_value' => variable_get('bmm_menu', 'main-menu'),
    '#ajax' => array(
      'callback' => 'better_mm_menu_items_ajax_callback',
      'wrapper' => 'bmm-menu-items',
      'method' => 'replace',
      'effect' => 'fade',
    ),
  );
  $form['bmm_menu_items_fieldset'] = array(
    '#title' => t("Menu Items"),
    '#prefix' => '<div id="bmm-menu-items">',
    '#suffix' => '</div>',
    '#type' => 'fieldset',
    '#description' => t('Description here.'),
  );
  $form['bmm_menu_items_fieldset']['description_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Help'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['bmm_menu_items_fieldset']['description_fieldset']['description'] = array(
    '#type' => 'markup',
    '#markup' => '<div id="better-mm-help-text">You can put some helpful text here.</div>',
  );
  
  $menu_selection = !empty($form_state['values']['bmm_menu']) ? $form_state['values']['bmm_menu'] : 'main-menu';
  $menu_items = menu_navigation_links($menu_selection);
  
  $form['menu_items'] = array(
    '#type' => 'value',
    '#value' => $menu_items,
  );
  foreach ($menu_items as $menu_item) {
    // variables
    $item_name = $menu_item['title'];
    $item_machine_name = str_replace(' ', '-', strtolower($item_name));
    $menu_item_fieldset = 'bmm_menu_item_' . $item_machine_name;
    $variable_name = 'bmm_style_' . $item_machine_name;
    $style_settings_fieldset = 'bmm_menu_' . $item_machine_name . '_style_settings_subset';
    $mega_default = variable_get('bmm_menu_item_' . $item_machine_name . '_mega_setting');
    $mega_default = !empty($mega_default['value']) ? $mega_default['value'] : '';
    
    // Construct settings fields for each menu item.
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset] = array(
      '#type' => 'fieldset',
      '#title' => t($item_name),
    );
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset][$variable_name] = array(
      '#type' => 'select',
      '#title' => t('Menu Item Style'),
      '#options' => better_mm_get_options('styles'),
      '#default_value' => variable_get($variable_name, 'standard'),
      '#prefix' => '<div id="bmm-menu-item-' . $item_machine_name . '-settings" class="bmm-menu-item-settings">',
      '#suffix' => '</div>',
      '#ajax' => array(
         'callback' => 'better_mm_style_ajax_callback',
         'wrapper' => 'bmm-style-settings-' . $item_machine_name,
         'method' => 'replace',
         'effect' => 'fade',
      ),
    );
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset][$style_settings_fieldset] = array(
      '#type' => 'fieldset',
      '#prefix' => '<div id="bmm-style-settings-' . $item_machine_name . '" class="bmm-style-settings">',
      '#suffix' => '</div>',
    );
    $saved_style = variable_get('bmm_style_' . $item_machine_name, 'standard');
    $bmm_item_style = !empty($form_state['triggering_element']['#value']) ? 
      $form_state['triggering_element']['#value'] : $saved_style;
    
    if ($bmm_item_style == 'Upload') {
      $bmm_item_style = 'wide';
    }
        
    if ($bmm_item_style == 'standard') {
      $wide_access = FALSE;
      $mega_access = FALSE;
    }
    if ($bmm_item_style == 'wide') {
      $wide_access = TRUE;
      $mega_access = FALSE;
    }
    if ($bmm_item_style == 'mega') {
      $mega_access = TRUE;
      $wide_access = FALSE;
    }
    
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset][$style_settings_fieldset]['bmm_menu_item_' . $item_machine_name . '_wide_setting'] = array(
      '#access' => $wide_access,
      '#type' => 'managed_file',
      '#title' => t('Image Upload'),
      '#size' => 40,
      '#description' => t('Select an image that is at least @dimensionspx and maximum @filesize. Allowed extensions: png jpg jpeg',
      array(
        '@dimensions' => '100x100',
        '@filesize' => format_size(file_upload_max_size()),
      )),
	  '#upload_validators' => array(
        'file_validate_extensions' => array('png jpg jpeg'),
      ),
      '#upload_location' => 'public://menu_images/',
      '#default_value' => variable_get('bmm_menu_item_' . $item_machine_name . '_wide_setting', ''),
    );
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset][$style_settings_fieldset]['bmm_menu_item_' . $item_machine_name . '_mega_setting'] = array(
      '#access' => $mega_access,
      '#type' => 'text_format',
      '#title' => t('Mega Menu Code'),
      '#description' => t('Add html code for Mega Menu block here.'),
      '#default_value' => $mega_default,
      '#format' => 'full_html',
      '#rows' => 10,
    );
  }
  $form['#submit'][] = 'better_mm_admin_settings_submit';

  return system_settings_form($form);
}

// ==================================================
// = Ajax callback for menu items of selected menu. =
// ==================================================

function better_mm_menu_items_ajax_callback($form, $form_state) {
  return $form['bmm_menu_items_fieldset'];
}

// =======================================
// = Ajax callback for menu items style. =
// =======================================

function better_mm_style_ajax_callback($form, $form_state) {
  $index = $form_state['triggering_element']['#array_parents'];
  $menu_item = $form_state['triggering_element']['#name'];
  $menu_item = explode('_', $menu_item);
  $menu_item = $menu_item[2];
  
  return $form[$index[0]][$index[1]]['bmm_menu_' . $menu_item . '_style_settings_subset'];
}

// ==============================
// = Admin form submit handler =
// ==============================

function better_mm_admin_settings_submit(&$form, &$form_state) {
  $menu_items = !empty($form_state['values']['menu_items']) ? $form_state['values']['menu_items'] : '';
  
  if (!empty($menu_items)) {
    foreach ($menu_items as $menu_item) {
      $title = str_replace(' ', '-', strtolower($menu_item['title']));
      $style = $form_state['values']['bmm_style_' . $title];
      
    }
  }
}

// ==================================================
// = Get list of options for select list form item. =
// ==================================================

function better_mm_get_options($item) {
  if ($item == 'menus') {
    $options = menu_get_menus();
  }
  
  if ($item == 'styles') {
    $options = array(
      'standard' => 'Standard',
      'wide' => 'Wide',
      'mega' => 'Mega Menu',
    );  
  }
  return $options;
}


<?php
// $Id$

/**
 * @file
 * Provides configuration page to choose a menu to pull items from and create a custom menu using those items.
 */

// =================================
// = Implements hook_permission(). =
// =================================

function better_mm_permission() {
  $permission = array(
    'administer better mm' => array(
      'title' => t('Administer Better Mega Menu'),
      'description' => t('Configure Better Mega Menu Settings.'),
    ),
  );
  return $permission;
}

// ===========================
// = Implements hook_menu(). =
// ===========================

function better_mm_menu() {
  $items['admin/structure/better_mm'] = array(
    'title' => t('Better Mega Menu Settings'),
    'description' => t('Configure Better Mega Menu Settings.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('better_mm_admin_settings'),
    'access arguments' => array('administer better mm'),
  );
  return $items;
}

// ================================
// = Construct admin settins form =
// ================================

function better_mm_admin_settings($form, &$form_state) {
  $wide_access = FALSE;
  $mega_access = FALSE;
  
  $form['bmm_menu'] = array(
    '#title' => t('Select Menu'),
    '#type' => 'select',
    '#options' => better_mm_get_options('menus'),
    '#default_value' => variable_get('bmm_menu', 'main-menu'),
    '#ajax' => array(
      'callback' => 'better_mm_menu_items_ajax_callback',
      'wrapper' => 'bmm-menu-items',
      'method' => 'replace',
      'effect' => 'fade',
    ),
  );
  $form['bmm_menu_items_fieldset'] = array(
    '#title' => t("Menu Items"),
    '#prefix' => '<div id="bmm-menu-items">',
    '#suffix' => '</div>',
    '#type' => 'fieldset',
    '#description' => t('Description here.'),
  );
  $form['bmm_menu_items_fieldset']['description_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Help'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['bmm_menu_items_fieldset']['description_fieldset']['description'] = array(
    '#type' => 'markup',
    '#markup' => '<div id="better-mm-help-text">You can put some helpful text here.</div>',
  );
  
  $menu_selection = !empty($form_state['values']['bmm_menu']) ? $form_state['values']['bmm_menu'] : 'main-menu';
  $menu_items = menu_navigation_links($menu_selection);
  
  $form['menu_items'] = array(
    '#type' => 'value',
    '#value' => $menu_items,
  );
  foreach ($menu_items as $menu_item) {
    // variables
    $item_name = $menu_item['title'];
    $item_machine_name = str_replace(' ', '-', strtolower($item_name));
    $menu_item_fieldset = 'bmm_menu_item_' . $item_machine_name;
    $variable_name = 'bmm_style_' . $item_machine_name;
    $style_settings_fieldset = 'bmm_menu_' . $item_machine_name . '_style_settings_subset';
    $mega_default = variable_get('bmm_menu_item_' . $item_machine_name . '_mega_setting');
    $mega_default = !empty($mega_default['value']) ? $mega_default['value'] : '';
    
    // Construct settings fields for each menu item.
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset] = array(
      '#type' => 'fieldset',
      '#title' => t($item_name),
    );
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset][$variable_name] = array(
      '#type' => 'select',
      '#title' => t('Menu Item Style'),
      '#options' => better_mm_get_options('styles'),
      '#default_value' => variable_get($variable_name, 'standard'),
      '#prefix' => '<div id="bmm-menu-item-' . $item_machine_name . '-settings" class="bmm-menu-item-settings">',
      '#suffix' => '</div>',
      '#ajax' => array(
         'callback' => 'better_mm_style_ajax_callback',
         'wrapper' => 'bmm-style-settings-' . $item_machine_name,
         'method' => 'replace',
         'effect' => 'fade',
      ),
    );
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset][$style_settings_fieldset] = array(
      '#type' => 'fieldset',
      '#prefix' => '<div id="bmm-style-settings-' . $item_machine_name . '" class="bmm-style-settings">',
      '#suffix' => '</div>',
    );
    $saved_style = variable_get('bmm_style_' . $item_machine_name, 'standard');
    $bmm_item_style = !empty($form_state['triggering_element']['#value']) ? 
      $form_state['triggering_element']['#value'] : $saved_style;
    
    if (($bmm_item_style == 'Upload') || ($bmm_item_style == 'Remove')) {
      $bmm_item_style = 'wide';
    }
        
    if ($bmm_item_style == 'standard') {
      $wide_access = FALSE;
      $mega_access = FALSE;
    }
    if ($bmm_item_style == 'wide') {
      $wide_access = TRUE;
      $mega_access = FALSE;
    }
    if ($bmm_item_style == 'advanced') {
      $mega_access = TRUE;
      $wide_access = FALSE;
    }
    
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset][$style_settings_fieldset]['bmm_menu_item_' . $item_machine_name . '_wide_setting'] = array(
      '#access' => $wide_access,
      '#type' => 'managed_file',
      '#title' => t('Image Upload'),
      '#size' => 40,
      '#description' => t('Select an image that is at least @dimensionspx and maximum @filesize. Allowed extensions: png jpg jpeg',
      array(
        '@dimensions' => '100x100',
        '@filesize' => format_size(file_upload_max_size()),
      )),
	  '#upload_validators' => array(
        'file_validate_extensions' => array('png jpg jpeg'),
      ),
      '#upload_location' => 'public://menu_images/',
      '#default_value' => variable_get('bmm_menu_item_' . $item_machine_name . '_wide_setting', ''),
    );
    $form['bmm_menu_items_fieldset'][$menu_item_fieldset][$style_settings_fieldset]['bmm_menu_item_' . $item_machine_name . '_mega_setting'] = array(
      '#access' => $mega_access,
      '#type' => 'text_format',
      '#title' => t('Advanced Menu Item Code'),
      '#description' => t('Add html code for Advanced Menu block here.'),
      '#default_value' => $mega_default,
      '#format' => 'full_html',
      '#rows' => 10,
    );
  }
  $form['#submit'][] = 'better_mm_admin_settings_submit';

  return system_settings_form($form);
}

// ==================================================
// = Ajax callback for menu items of selected menu. =
// ==================================================

function better_mm_menu_items_ajax_callback($form, $form_state) {
  return $form['bmm_menu_items_fieldset'];
}

// =======================================
// = Ajax callback for menu items style. =
// =======================================

function better_mm_style_ajax_callback($form, $form_state) {
  $index = $form_state['triggering_element']['#array_parents'];
  $menu_item = $form_state['triggering_element']['#name'];
  $menu_item = explode('_', $menu_item);
  $menu_item = $menu_item[2];
  
  return $form[$index[0]][$index[1]]['bmm_menu_' . $menu_item . '_style_settings_subset'];
}

// ==============================
// = Admin form submit handler =
// ==============================

function better_mm_admin_settings_submit(&$form, &$form_state) {
  $menu_items = !empty($form_state['values']['menu_items']) ? $form_state['values']['menu_items'] : '';
  $key = 0;
  $html = '<ul class="mega-menu mega-level-1 first hide-on-med-and-down">';
  
  if (!empty($menu_items)) {
    foreach ($menu_items as $menu_item) {
      $title = str_replace(' ', '-', strtolower($menu_item['title']));
      $style = $form_state['values']['bmm_style_' . $title];
      $fid = !empty($form_state['values']['bmm_menu_item_' . $title . '_wide_setting']) ? 
        $form_state['values']['bmm_menu_item_' . $title . '_wide_setting'] : '';
      $adv_content = !empty($form_state['values']['bmm_menu_item_' . $title . '_mega_setting']['value']) ?
        $form_state['values']['bmm_menu_item_' . $title . '_mega_setting']['value'] : '';
      $children = better_mm_get_children($menu_item);
      $l1_class = better_mm_get_li_class($key, $menu_items);
      $child_class = better_mm_get_child_class($children, $style);
      $class_list = $l1_class . $child_class;
      
      if ($menu_item['href'] == '<front>') {
        $url = url('<front>');
      } else {
        $url = '/' . drupal_get_path_alias($menu_item['href']);
      }
      
      // If a file has been uploaded, set file status to permanent.
      if (is_numeric($fid)) {
        $file = file_load($fid);
        $file->status = FILE_STATUS_PERMANENT;
        file_save($file);
      }
      
      $html .= '<li class="' . $class_list . '"><a href="' . $url . '">' . $menu_item['title'] . '</a>';
      
      if ($style == 'advanced') {
        // Generate HTML for advanced item drop down.
        if (!empty($adv_content)) {
          $html .= '<div class="inner row">' . $adv_content . '</div> <!-- end inner row -->';
        }
        $html .= '</li>';
      }
      if (($style == 'wide') || ($style == 'standard')) {
        // Generate HTMl for the children of wide or standard items.
        $html .= better_mm_menu_item_tree($style, $children, $fid);
      }
      $key++;
    } // foreach menu_item
    $html .= '</ul>';
  }
  variable_set('bmm_block_content', $html);
  dsm($html, 'html');
}

// ==================================================
// = Get list of options for select list form item. =
// ==================================================

function better_mm_get_options($item) {
  if ($item == 'menus') {
    $options = menu_get_menus();
  }
  
  if ($item == 'styles') {
    $options = array(
      'standard' => 'Standard',
      'wide' => 'Wide',
      'advanced' => 'Advanced',
    );  
  }
  return $options;
}

// ==========================
// = Get menu item children =
// ==========================

function better_mm_get_children($menu_item) {
  if ($menu_item['href'] == '<front>') {
    $path = '/';
  } else {
    $path = $menu_item['href'];
  }
  $parent = menu_link_get_preferred($path);
  $parameters = array(
  	'active_trail' => array($parent['plid']),
  	'only_active_trail' => FALSE,
  	'min_depth' => $parent['depth']+1,
  	'max_depth' => $parent['depth']+1,
  	'conditions' => array('plid' => $parent['mlid']),
  );
  $children = menu_build_tree($parent['menu_name'], $parameters);
  
  return $children;
}

// ===================================
// = Get the class for the <li> item =
// ===================================

function better_mm_get_li_class($key, $array) {
  $last = count($array) - 1;
  
  if ($key == 0) {
    return 'first';
  }
  
  if ($key == $last) {
    return 'last';
  }
  
  if ($key & 1) {
    return 'even';
  } else {
    return 'odd';
  }
}

// =================================
// = Get child class for <li> item =
// =================================

function better_mm_get_child_class($children, $style = 'standard') {
  if ($style == 'advanced') {
    return ' unset-child';
  }
  
  if (!empty($children)) {
    return ' has-children';
  } else {
    return ' no-children';
  }
}

// =============================
// = Build menu item tree HTML =
// =============================

function better_mm_menu_item_tree($style, $children, $fid) {
  $result = '';
  $file = array();
  if (!empty($fid)) {
    if (is_numeric($fid)) {
      $file = file_load($fid);
      $uri = $file->uri;
      $file_url = file_create_url($uri);
      $inline_css = 'background-image: url(' . $file_url . '); background-repeat: no-repeat; background-position: 0 0;';
    }
  }
  if (!empty($children)) {
    $key2 = 0;
    $result .= '<ul class="mega-level-2 ' . $style . '"';
    if (!empty($file)) {
      $result .= ' style="' . $inline_css . '"';
    }
    $result .= '>';
    foreach ($children as $child) {
      $title2 = $child['link']['link_title'];
      $children2 = better_mm_get_children($child['link']);
      $l2_class = better_mm_get_li_class($key2, $children);
      $child2_class = better_mm_get_child_class($children2);
      $class2_list = $l2_class . $child2_class;
      if ($child['link']['href'] == '<front>') {
        $url2 = url('<front>');
      } else {
        $url2 = '/' . drupal_get_path_alias($child['link']['href']);
      }
      $result .= '<li class="' . $class2_list . '"><a href="' . $url2 . '">' . $title2 . '</a>';
      $key2++;
      if (!empty($children2)) {
        $key3 = 0;
        $result .= '<div class="plus-button"></div><ul class="mega-level-3">';
        foreach ($children2 as $child2) {
          $title3 = $child2['link']['link_title'];
          $l3_class = better_mm_get_li_class($key3, $children2);
          if ($child2['link']['href'] == '<front>') {
            $url3 = url('<front>');
          } else {
            $url3 = '/' . drupal_get_path_alias($child2['link']['href']);
          }
          $result .= '<li class="' . $l3_class . '"><a href="' . $url3 . '">' . $title3 . '</a></li>';
          $key3++;
        } // foreach child2
        $result .= '</ul></li>';
      } else {
        $result .= '</li>';
      }
    } // foreach child
    $result .= '</ul></li>';
  } else {
    $result .= '</li>';
  }
  return $result;
}

// ================================
// = Implements hook_block_info() =
// ================================

function better_mm_block_info() {
  $blocks = array();
  $blocks['better_mm_menu_block'] = array(
    'info' => t('Better Mega Menu Block'),
  );
  
  return $blocks;
}

// ================================
// = Implements hook_block_view() =
// ================================

function better_mm_block_view($delta = '') {
  $block = array();
  
  switch ($delta) {
    case 'better_mm_menu_block':
    $block['subject'] = '';
    $block['content'] = variable_get('bmm_block_content', '');
    break;
  }
  return $block;
}